/* import 'prismjs/themes/prism-tomorrow.css'; // Choose a theme
import type { Metadata } from "next";
import 'katex/dist/katex.min.css';
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Head from 'next/head';
import Navbar from './components/Navbar'; 




const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};


export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
      <link
          rel="stylesheet"
          href="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.css"
      />
        {children}
      </body>
    </html>
  );
}


export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body>
        <Navbar /> //Include the Navbar component 
        <main>{children}</main> //{/* Render the page content 
      </>
    </html>
  );
}


export function Layout({ children }) {
  return (
    <>
      <Head>
        <link
          rel="stylesheet"
          href="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.css"
        />
      </Head>
      {children}
    </>
  );
}
*/

import 'prismjs/themes/prism-tomorrow.css'; // Choose a theme
import type { Metadata } from 'next';
import 'katex/dist/katex.min.css';
import { Geist, Geist_Mono } from "next/font/google";
import './globals.css';
import Navbar from './components/Navbar';

// Load fonts
const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

// Metadata for the app
export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

// RootLayout component
export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en" className={`${geistSans.variable} ${geistMono.variable}`}>
      <body className="antialiased">
        <Navbar /> {/* Include the Navbar component */}
        <main>{children}</main> {/* Render the page content */}
      </body>
    </html>
  );
}
